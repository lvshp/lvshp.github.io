[{"title":"node.js安装Windows下npm命令权限问题.md","url":"/2020/07/19/node-js安装Windows下npm命令权限问题-md/","content":"这个问题是学习vue时，需要用到npm安装，安装node.js之后出现的\n\n```\nnpm ERR! Error: EPERM: operation not permitted, mkdir 'C:\\Program Files\\nodejs\\node_cache\\_locks'\n```\n根据这个提示来看是缺少创建文件的权限（Windows下常见的权限问题）\n于是使用win+x选择 Windows PowerShell(管理员)(A)运行  ```` npm install--global vue-cli ```` 命令安装一个全局的vue-cli\n下一步自然是创建一个新的项目 `vue init webpack project`\n运行命令后报错如下\n```\nvue : 无法加载文件 G:\\nodejs\\node_global\\vue.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。\n```\n\nPowerShell的执行政策阻止了该操作。\n用 Get-ExecutionPolicy 查看发现执行策略为受限状态：Restricted\n同时PowerShell给出了我们解决问题的方法\n!\n\n![](../assets/images/1647727-20200330173708009-233976968.png)\n此时我们按照要求输入Set-ExecutionPolicy -Scope CurrentUser命令，回车，在黑窗口中输入RemoteSigned解除受限状态\n输入get-ExecutionPolicy，此时结果为RemoteSigned（受限移除），这样我们就可以正常创建了\n\n","tags":["vue","node.js","windows"]},{"title":"PHP数组合并.md","url":"/2019/10/19/PHP数组合并/","content":"\n处理业务时遇到一个问题，需要合并两个二维数组\n\n\n\n如下边这种类型数组，下标值是固定的\n\n```\n$a = array(\n\t6 => ['a','b'],\n\t9 => ['c','d']\n);\n$b = array(\n\t15 => ['e','f'],\n\t23 => ['g','h']\n);\n```\n\n\n\n开始是用的php函数 array_merge(),发现会把下标重置为从0开始依次排序\n\n\n\n\n\n最后只能用遍历的方式重组数组\n\n```\n$c = [];\nforeach($a as $k=>$v){\n    $c[$k] = $v;\n}\nforeach($b as $key=>$val){\n    $c[$key] = $val;\n}\n```\n\n\n","tags":["PHP","数组合并"]},{"title":"信用卡支付通道对接.md","url":"/2019/04/21/信用卡支付通道对接/","content":"\n一些跨境电商独立站等基本都会有国际信用卡收款通道的接入\n\n收款通道的接入基本千篇一律\n\n拿钱海支付（oceanpayment）举个例子\n\n#### 业务流程说明：\n\n（1）消费者在网站下单。 \n\n（2）网站提交订单信息到 Oceanpayment支付系统。 \n\n（3）Oceanpayment 支付系统进行参数校验，校验参数是否合法。 \n\n（4）Oceanpayment 支付系统返回参数异常订单信息给网站。 \n\n（5）向用户展示订单结果。 \n\n（6）如果（3）校验通过，向用户展示信用卡填写页面。 \n\n（7）消费者填写信用卡号等信息。 \n\n（8）Oceanpayment 风控系统进行判断订单风险。 \n\n（9）Oceanpayment 支付系统返回高风险订单信息给网站。 \n\n（10）向用户展示订单结果。 \n\n（11）如果（8）校验通过，Oceanpayment 支付系统将该笔订单扣款请求发送至银行。 \n\n（12）银行处理该笔付款请求，返回支付结果。 \n\n（13）Oceanpayment 支付系统返回支付结果给网站。 \n\n（14）Oceanpayment 支付系统通过异步消息通知网站支付结果。 \n\n（15）网站响应 receive-ok字符告知异步消息接收情况。 \n\n（16）未收到支付通知的情况下，调用Oceanpayment 对账 API【本文档C部分】，查询最新的订单状态。\n\n（17）Oceanpayment 对账 API返回订单支付结果。 \n\n（18）向用户展示订单支付结果。 \n\n（19）如果支付成功则安排发货。\n\n以上是钱海通道流程，我们要做的就是提交信息到支付系统，支付系统会返回信息到我们提交的backUrl（用于浏览器跳转）和noticeUrl（异步发送到服务器，也是我们处理订单的地方）\n\n提交给支付系统的信息和支付系统返回的信息中会带有一个加密字符串，用于验证安全性，加密规则根据支付通道规定来加密\n\n#### 业务处理：\n\n##### backUrl\n\nbackUrl用于支付之后跳转到商户网站\n\n在backUrl方法中收到返回信息，首先通过加密规则对返回信息加密，和返回的加密字符串对比 ，如果一致则进行之后的处理\n\n返回信息中会有订单状态，根据状态渲染支付成功或失败页面给用户\n\n##### noticeUrl\n\nnoticeUrl 用于支付之后对商户订单的处理\n\n跟backUrl一样，验证秘匙和支付状态，支付成功则修改商户订单的支付状态，然后返回支付系统“receive-ok”字符告知支付系统已经收到信息\n\n如此便大功告成\n\n如果是一些开源商户建站系统，如WordPress，zenCart，shopify等等这些，支付的接入会比较方便，基本都有集成的插件，只要安装插件之后填写支付通道开户后的商家私匙和秘匙就可以了\n\n\n","tags":["支付接口"]},{"title":"PHP字符串转数字.md","url":"/2018/09/15/PHP字符串转数字/","content":"\n实现字符串转数字\n\n首先剔除字符串首位空格\n\n如果字符串第一个非空字符为 \"-\" \"+\"符号，则让这个符号和尽可能多的连续数字组合起来，作为该数字的正负号，假如第一个非空字符是数字，则直接将之与之后连续的数字组合起来\n\n假如第一个字符不是正负号和数字，则返回0\n\n假设我们的环境只能存储 32 位大小的有符号整数，那么其数值范围为 [−2<sup>31</sup>,  2<sup>31</sup> − 1]。如果数值超过这个范围，qing返回  INT_MAX (2<sup>31</sup> − 1) 或 INT_MIN (−2<sup>31</sup>) 。\n\n\n\n```php\nclass Solution {\n\n    /**\n     * @param String $str\n     * @return Integer\n     */\n    function myAtoi($str) {\n        $s = trim($str);\n        $tmp = '';\n        if($s[0]==\"-\"||$s[0]==\"+\"){\n            $tmp = $s[0];\n            $s = substr_replace($s,'',0,1);\n        }\n        \n        $len = strlen($s);\n        $str = '';\n        for($i=0;$i<$len;$i++){\n            if(is_numeric($s[$i])){\n                $str .= $s[$i];\n            }else{\n                break;\n            }\n        }\n        \n        $min = pow(-2,31);\n\t    $max = pow(2,31)-1;\n        if($str == ''){\n            return 0;\n        }\n        $str = $tmp.$str;\n        $str = (int)$str;\n        if($str<$min){\n            return $min;\n        }\n        if($str>$max){\n            return $max;\n        }\n        return $str;\n    }\n}\n```\n\n","tags":["PHP","字符串"]},{"title":"ThinkPHP3.2缓存问题.md","url":"/2018/09/08/ThinkPHP3-2缓存问题/","content":"\n维护公司网站时碰到个问题，网站用的Thinkphp3.2\n\n​\t由于需要添加新功能，在原有数据表上添加了两个字段，在往这个数据表里添加数据时自然要加上这两个字段的数据，但是试了好多次，只有原有字段数据添加进去了，而新字段数据添加不上去，打印数据显示数据正常，sql语句正常，直接把Runtime文件夹删了一切OK\n\n\n\n​\ttp的缓存应该是静态页面缓存，为什么会影响到数据呢，猜想可能缓存对模型也有影响，具体的不得而知，反正问题是解决了\n\n","tags":["ThinkPHP3.2","缓存"]},{"title":"Gridea博客系统搭建.md","url":"/2016/05/19/Gridea博客系统搭建/","content":"\nGridea是一个简洁而优雅的博客系统，支持MarkDown语法，任何人都可以很轻松的搭建出来\n\n<!-- more -->\n\n### 搭建步骤\n\n1.下载Gridea客户端\n\n2.配置服务器nginx\n\n3.配置远程信息\n\n#### 下载客户端\n\nGridea客户端[官方下载](https://gridea.dev/#started)，支持Windows、Mac、Linux\n\n我是用的Windows版本，直接运行exe安装即可\n\n#### 配置服务器\n\n之后配置服务器环境，安装nginx代理，这里推荐使用Oneinstack安装\n\n```shell\n\nyum -y install wget screen #for CentOS/Redhat\n\n# apt-get -y install wget screen #for Debian/Ubuntu\n\nwget http://mirrors.linuxeye.com/oneinstack-full.tar.gz #包含源码，国内外均可下载\n\ntar xzf oneinstack-full.tar.gz\n\ncd oneinstack #如果需要修改目录(安装、数据存储、Nginx日志)，请修改options.conf文件\n\nscreen -S oneinstack #如果网路出现中断，可以执行命令`screen -R oneinstack`重新连接安装窗口\n\n```\n\n运行`./install.sh --nginx 1` 来安装nginx\n\n安装完成之后配置nginx，nginx配置文件位置/usr/local/nginx/conf/vhost文件夹内\n\n配置文件如下\n\n```conf\n\nserver {\n\nlisten 80;\n\nlisten [::]:80;\n\nserver_name lsp.codes www.lsp.codes; #这里是绑定的域名，域名绑定后要去域名商解析到服务器\n\naccess_log /data/wwwlogs/lsp.codes_nginx.log combined;\n\nindex index.html index.htm;\n\nroot /data/wwwroot/lsp.codes; #这是网站根目录地址，后边配置Gridea要用到\n\nif ($host != lsp.codes) { return 301 $scheme://lsp.codes$request_uri; }\n\ninclude /usr/local/nginx/conf/rewrite/none.conf;\n\nerror_page 404 /404.html;\n\n#error_page 502 /502.html;\n\nlocation ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ {\n\nexpires 30d;\n\naccess_log off;\n\n}\n\nlocation ~ .*\\.(js|css)?$ {\n\nexpires 7d;\n\naccess_log off;\n\n}\n\nlocation ~ /(\\.user\\.ini|\\.ht|\\.git|\\.svn|\\.project|LICENSE|README\\.md) {\n\ndeny all;\n\n}\n\n```\n\n#### 配置远程信息\n\n打开Gridea软件远程页面并配置服务器信息\n\n![](file://C:/Users/shuai/Documents/Gridea/post-images/202004260149.png)\n\n配置完成之后点击同步即可\n\n接下来在浏览器中输入博客地址，如我的博客[lsp.codes](http://lsp.codes)就能看到博客页面\n\n","tags":["blog","Gridea"]}]